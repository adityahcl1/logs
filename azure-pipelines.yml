# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

# trigger:
# - main

# pool:
#   vmImage: ubuntu-latest

# steps:
# - script: echo Hello, world!
#   displayName: 'Run a one-line script'

# - script: |
#     echo Add other tasks to build, test, and deploy your project.
#     echo See https://aka.ms/yaml
#   displayName: 'Run a multi-line script'
# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

# steps:
# - script: echo Hello, world!
#   displayName: 'Run a one-line script'

# - script: |
#     echo Add other tasks to build, test, and deploy your project.
#     echo See https://aka.ms/yaml
#   displayName: 'Run a multi-line script'

resources:
  webhooks:
    - webhook: httpheader-webhook       ## Webhook alias
      connection: webhook-with-http-header    ### Incoming webhook service connection
      #filters:                     ### List of JSON parameters to filter; Parameters are AND'ed
      #path: "namespace"        ### JSON path in the payload

stages:
  - stage: Configure_Namespaces

    jobs:
    - job: namespaceTest
      displayName: Namespace Test
      pool: 
       vmImage: ubuntu-latest
      steps:
        - task: Bash@3
          inputs:
            targetType: 'inline'
            script: 'echo "Namespace: ${{ parameters.testingwebhook.namespace }}"'
